// portfolio-stateless-lambda.cpp : This file contains the 'main' function. Program execution begins and ends there.
#include <iostream>
#include <string>
#include <vector>
#include <functional>
#include <algorithm>

class Person {
    friend std::ostream& operator<<(std::ostream& os, const Person& p);
private:
    std::string name;
    int age{};
public:
    Person(std::string name, int age = 0) : name(name), age(age) {};
    Person(const Person &p) : name{p.name}, age{p.age} {}
    ~Person() = default;
    std::string get_name() const { return name; }
    void set_name(std::string name) { this-> name = name; }
    int get_age() const { return age; }
    void set_age(int age) { this->age = age; }
};

std::ostream& operator<< (std::ostream& os, const Person& p) {
    os << p.name << ": " << p.age << " ";
    return os;
}
